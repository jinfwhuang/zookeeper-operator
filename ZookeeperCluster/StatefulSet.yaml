apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app: zk-cluster
    release: zk-cluster
  name: zk-cluster
spec:
  podManagementPolicy: OrderedReady
  replicas: 3
  selector:
    matchLabels:
      app: zk-cluster
  serviceName: zk-cluster-headless
  template:
    metadata:
      creationTimestamp: null
      generateName: zk-cluster
      labels:
        app: zk-cluster
        kind: ZookeeperMember
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - zk-cluster
              topologyKey: kubernetes.io/hostname
            weight: 20
      containers:
      - command:
        - /usr/local/bin/zookeeperStart.sh
        env:
        - name: ENVOY_SIDECAR_STATUS
          valueFrom:
            fieldRef:
              fieldPath: metadata.annotations['sidecar.istio.io/status']
        image: cr.k8s.tubemogul.info/jinhuan/zookeeper:v0.2.9-rc0-dirty
        imagePullPolicy: Always
        lifecycle:
          preStop:
            exec:
              command:
              - zookeeperTeardown.sh
        livenessProbe:
          exec:
            command:
            - zookeeperLive.sh
          initialDelaySeconds: 10
          timeoutSeconds: 10
        name: zookeeper
        ports:
        - containerPort: 2181
          name: client
        - containerPort: 2888
          name: quorum
        - containerPort: 3888
          name: leader-election
        - containerPort: 7000
          name: metrics
        readinessProbe:
          exec:
            command:
            - zookeeperReady.sh
          initialDelaySeconds: 10
          timeoutSeconds: 10
        resources: {}
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /conf
          name: conf
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: data
      - configMap:
          name: zk-cluster-configmap
        name: conf
  updateStrategy:
    type: RollingUpdate
status:
  replicas: 0
